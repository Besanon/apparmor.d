# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2018-2021 Mikhail Morfikov
#               2021 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

abi <abi/3.0>,

include <tunables/global>

@{exec_path} = /{usr/,}lib/polkit-1/polkitd
@{exec_path} += @{libexec}/polkitd
profile polkitd @{exec_path} {
  include <abstractions/base>
  include <abstractions/nameservice-strict>

  capability setuid,
  capability setgid,
  capability sys_ptrace,
  capability sys_nice,
  audit deny capability net_admin,

  ptrace (read),

  @{exec_path} mr,

  @{PROC}/@{pids}/stat r,
  @{PROC}/@{pids}/cmdline r,
  @{PROC}/@{pids}/task/@{tid}/stat r,
  @{PROC}/@{pids}/cgroup r,
  @{PROC}/sys/kernel/osrelease r,
  @{PROC}/1/environ r,
  @{PROC}/cmdline r,

  /etc/machine-id r,

  # System rules
  /etc/polkit-1/rules.d/ r,
  /etc/polkit-1/rules.d/[0-9][0-9]-*.rules r,
  /etc/polkit-1/localauthority/{,**} r,
  /etc/polkit-1/localauthority.conf.d/{,**} r,

  # Vendor rules
  /usr/share/polkit-1/rules.d/ r,
  /usr/share/polkit-1/rules.d/*.rules r,

  # Vendor policies
  /usr/share/polkit-1/actions/ r,
  /usr/share/polkit-1/actions/*.policy r,
  /usr/share/polkit-1/actions/*.policy.choice r,

  owner /var/lib/polkit-1/.cache/ rw,
        /var/lib/polkit-1/localauthority/{,**} r,

  @{run}/systemd/sessions/* r,
  @{run}/systemd/users/@{uid} r,
  @{run}/systemd/userdb/io.systemd.DynamicUser w,
  @{run}/systemd/userdb/io.systemd.Machine rw,

  # Silencer
  deny /.cache/ rw,

  # DBus
  dbus send
    bus="system" path="/org/freedesktop/DBus" interface="org.freedesktop.DBus" member="{GetConnectionUnixProcessID,GetConnectionUnixUser,AddMatch,RemoveMatch,Hello,RequestName}" peer=(name="org.freedesktop.DBus"),

  dbus receive
    bus="system" path="/org/freedesktop/PolicyKit1/Authority" interface="org.freedesktop.DBus.Properties" member="GetAll" peer=(name=":*"),

  dbus send
    bus="system" path="/org/freedesktop/PolicyKit1/Authority" interface="org.freedesktop.PolicyKit1.Authority" peer=(name="{org.freedesktop.DBus,:*}"),

  dbus receive
    bus="system" path="/org/freedesktop/PolicyKit1/Authority" interface="org.freedesktop.PolicyKit1.Authority" member="{EnumerateActions,CheckAuthorization,CancelCheckAuthorization,RegisterAuthenticationAgent}" peer=(name=":*"),

  dbus bind
    bus="system" name="org.freedesktop.PolicyKit1",

  @{run}/dbus/system_bus_socket rw,

  include if exists <local/polkitd>
}
